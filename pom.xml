<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://maven.apache.org/POM/4.0.0"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.2.0</version>
    <relativePath/>
  </parent>
  
  <groupId>com</groupId>
  <artifactId>service.webhook</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>webhook</name>
  <description>reactive webhook microservice</description>
  
  <properties>
    <java.version>21</java.version>
    
    <!-- Logging -->
    <logstash.version>7.4</logstash.version>
    
    <!-- Metrics -->
    <opentelemetry-exporter-otlp.version>1.32.0</opentelemetry-exporter-otlp.version>
    
    <!-- Utilities -->
    <apache-commons-text.version>1.11.0</apache-commons-text.version>
    
    <!-- Development-->
    <git-code-format-maven-plugin.version>5.1</git-code-format-maven-plugin.version>
    
    <!-- Test -->
    <testcontainers.version>1.19.3</testcontainers.version>
  </properties>
  
  <dependencies>
    
    <!-- Reactive Client -->
    <dependency>
      <artifactId>spring-boot-starter-webflux</artifactId>
      <groupId>org.springframework.boot</groupId>
    </dependency>
    
    <!--    <dependency>-->
    <!--      <groupId>io.projectreactor.tools</groupId>-->
    <!--      <artifactId>blockhound</artifactId>-->
    <!--      <version>1.0.8.RELEASE</version>-->
    <!--    </dependency>-->
    
    <!-- RabbitMQ -->
    <dependency>
      <artifactId>spring-boot-starter-amqp</artifactId>
      <groupId>org.springframework.boot</groupId>
    </dependency>
    
    <!-- Logging -->
    <dependency>
      <artifactId>logstash-logback-encoder</artifactId>
      <groupId>net.logstash.logback</groupId>
      <version>${logstash.version}</version>
    </dependency>
    
    <!-- Monitoring -->
    <dependency>
      <artifactId>spring-boot-starter-actuator</artifactId>
      <groupId>org.springframework.boot</groupId>
    </dependency>
    <dependency>
      <artifactId>micrometer-registry-prometheus</artifactId>
      <groupId>io.micrometer</groupId>
      <scope>runtime</scope>
    </dependency>
    
    <!-- Tracing -->
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-tracing-bridge-otel</artifactId>
    </dependency>
    <dependency>
      <groupId>io.opentelemetry</groupId>
      <artifactId>opentelemetry-exporter-otlp</artifactId>
      <version>${opentelemetry-exporter-otlp.version}</version>
    </dependency>
    
    <!-- Utilities -->
    <dependency>
      <groupId>io.projectreactor</groupId>
      <artifactId>reactor-core-micrometer</artifactId>
      <version>1.1.0</version>
    </dependency>
    <dependency>
      <artifactId>commons-text</artifactId>
      <groupId>org.apache.commons</groupId>
      <version>${apache-commons-text.version}</version>
    </dependency>
    <dependency>
      <artifactId>lombok</artifactId>
      <groupId>org.projectlombok</groupId>
      <optional>true</optional>
    </dependency>
    
    <!-- Development tools -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <scope>runtime</scope>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>
    
    <!-- Testing libraries -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <!-- exclude junit 4 -->
      <exclusions>
        <exclusion>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-testcontainers</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>rabbitmq</artifactId>
      <version>${testcontainers.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${testcontainers.version}</version>
      <scope>test</scope>
    </dependency>
  
  </dependencies>
  
  <build>
    <plugins>
      
      <!-- Unit tests -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.2.5</version>
      
      </plugin>
      
      <!-- Integration tests -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>3.2.5</version>
      </plugin>
      
      <!--
        Spring boot buildpack image are build and run as non-root (runAsUser: 1000)
        Principal buildpack that it uses:
          https://github.com/paketo-buildpacks/bellsoft-liberica
          https://github.com/paketo-buildpacks/spring-boot
      -->
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <image>
            <env>
              <BP_JVM_VERSION>21</BP_JVM_VERSION>
            </env>
            <createdDate>${maven.build.timestamp}</createdDate>
          </image>
        </configuration>
      </plugin>
      
      <!-- Code formatting hooks -->
      <plugin>
        <groupId>com.cosium.code</groupId>
        <artifactId>git-code-format-maven-plugin</artifactId>
        <version>${git-code-format-maven-plugin.version}</version>
        <executions>
          <!-- On commit, format the modified files -->
          <execution>
            <id>install-formatter-hook</id>
            <goals>
              <goal>install-hooks</goal>
            </goals>
          </execution>
          <execution>
            <id>validate-code-format</id>
            <goals>
              <goal>validate-code-format</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>com.cosium.code</groupId>
            <artifactId>google-java-format</artifactId>
            <version>${git-code-format-maven-plugin.version}</version>
          </dependency>
        </dependencies>
      </plugin>
    
    </plugins>
  </build>
  
  <!-- (you don't need this if you are using a .RELEASE version) -->
  <repositories>
    <repository>
      <id>spring-milestones</id>
      <name>Spring Milestones</name>
      <url>https://repo.spring.io/milestone</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>spring-snapshots</id>
      <name>Spring Snapshots</name>
      <url>https://repo.spring.io/snapshot</url>
      <releases>
        <enabled>false</enabled>
      </releases>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>spring-milestones</id>
      <name>Spring Milestones</name>
      <url>https://repo.spring.io/milestone</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </pluginRepository>
    <pluginRepository>
      <id>spring-snapshots</id>
      <name>Spring Snapshots</name>
      <url>https://repo.spring.io/snapshot</url>
      <releases>
        <enabled>false</enabled>
      </releases>
    </pluginRepository>
  </pluginRepositories>

</project>
